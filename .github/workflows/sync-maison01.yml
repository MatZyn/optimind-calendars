name: Sync Maison01.ics depuis VRBO

on:
  schedule:
    - cron: '0 * * * *'  # Toutes les heures
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-ics:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout du d√©p√¥t
      uses: actions/checkout@v3

    - name: T√©l√©charger le .ics VRBO
      run: |
        curl -sSfL -o raw.ics "http://www.vrbo.com/icalendar/3fdfd900b0ec4547aae7c1dac753f67e.ics?nonTentative"
        if [ ! -s raw.ics ]; then
          echo "‚ùå Le fichier raw.ics est vide !"
          exit 1
        fi
        echo "‚úÖ raw.ics t√©l√©charg√© - taille : $(wc -c < raw.ics) octets"

    - name: G√©n√©rer Maison01.ics propre
      run: |
        {
          echo "BEGIN:VCALENDAR"
          echo "VERSION:2.0"
          echo "CALSCALE:GREGORIAN"
          echo "PRODID:-//Optimind//Calendrier Maison01//FR"
          echo "X-WR-CALNAME:Calendrier Maison01"
          echo "X-WR-TIMEZONE:Europe/Paris"
          grep -E "^(BEGIN:VEVENT|UID:|DTSTAMP:|DTSTART.*|DTEND.*|SUMMARY:|END:VEVENT)" raw.ics \
            | sed -E 's/SUMMARY:Reserved.*/SUMMARY:R√©serv√© - Maison01/' \
            | sed -E 's/SUMMARY:Blocked.*/SUMMARY:Bloqu√©/' 
          echo "END:VCALENDAR"
        } > Maison01.ics
        echo "‚úÖ Maison01.ics g√©n√©r√© - taille : $(wc -c < Maison01.ics) octets"

    - name: Segmenter les longues lignes (compatibilit√©)
      run: |
        fold -w 75 Maison01.ics > Maison01_tmp.ics && mv Maison01_tmp.ics Maison01.ics

    - name: Commit si modification
      run: |
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git add Maison01.ics
        if ! git diff --cached --quiet; then
          git commit -m "üîÅ Mise √† jour automatique Maison01.ics"
          git push
          echo "‚úÖ Fichier mis √† jour et envoy√©."
        else
          echo "‚ÑπÔ∏è Aucun changement d√©tect√© dans Maison01.ics."
        fi


